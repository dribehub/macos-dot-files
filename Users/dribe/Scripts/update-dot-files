#!/bin/sh

alias copy="rsync -a --del"
cd ~/Repos/macos-dot-files

BASEDIR=Users/dribe # global configs
copy /$BASEDIR/Scripts                      $BASEDIR/
copy /$BASEDIR/.vimrc                       $BASEDIR/
copy /$BASEDIR/.zshrc                       $BASEDIR/
copy /$BASEDIR/.zshenv                      $BASEDIR/
copy /$BASEDIR/.zsh/aliases.zsh             $BASEDIR/.zsh/
copy /$BASEDIR/.zsh/cli-commands.sh         $BASEDIR/.zsh/
copy /$BASEDIR/.zsh/functions.zsh           $BASEDIR/.zsh/
copy /$BASEDIR/.oh-my-zsh/themes/dribe.zsh-theme $BASEDIR/.oh-my-zsh/dribe.zsh-theme

BASEDIR=Users/dribe/.config # personal configs
copy /$BASEDIR/firefox                      $BASEDIR/
copy /$BASEDIR/iterm2                       $BASEDIR/iterm2/
copy /$BASEDIR/lvim                         $BASEDIR/
copy /$BASEDIR/neofetch/config.conf         $BASEDIR/neofetch/
copy /$BASEDIR/nvim                         $BASEDIR/
copy /$BASEDIR/spicetify/config-xpui.ini    $BASEDIR/spicetify/
copy /$BASEDIR/vimium                       $BASEDIR/

# ansi codes
col0="\e[0;39m"     # normal
col1="\e[32m"       # green
col2="\e[1;32m"     # bold green
col3="\e[1;31m"     # bold red

########## git prompt menu ##########

# add all changes locally
git add .

# catch -m option and avoid git prompt menu
if  [[ $1 = "-m" ]]; then
    shift
    git status &&
    git commit -am "${@}" &&
    git push &&
    exit 0 || exit 1
fi

opt=0
while [[ $opt != [nN6] && $opt != 'push' ]]; do
    echo -ne "${col1}1${col0}) ${col2}log ${col0}commit history\n" \
    "\b${col1}2${col0}) ${col0}show ${col2}diff${col0}erences\n" \
    "\b${col1}3${col0}) ${col2}show ${col0}last commit\n" \
    "\b${col1}4${col0}) ${col0}show git ${col2}status${col0}\n" \
    "\b${col1}5${col0}) ${col2}commit ${col0}latest changes\n" \
    "\b${col1}6${col0}) ${col2}push ${col0}latest commits\n" \
    "\b${col2}n${col0}/${col2}N ${col0}to cancel: ${col2}"
    
    read opt && echo -e "${col0}";
    case $opt in
        1|log) git log;;
        2|diff) git diff HEAD;;
        3|show) git show;;
        4|status) git status;;
        5|commit) echo -ne "Enter commit message: ${col2}" &&
            read msg && 
            echo -ne "${col0}" &&
            git commit -am "${msg}" && 
            echo '';;
        6|push) git push;;
        n|N) continue;;
        *) echo -e "${col3}Invalid option!${col0}";
    esac
done

